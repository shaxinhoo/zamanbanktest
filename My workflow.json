{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -1680,
        96
      ],
      "id": "ff11d481-2645-4fd9-9af7-7135e39c28dc",
      "name": "Telegram Trigger",
      "webhookId": "51475ad0-7003-473c-9684-9fa1506ea6a8",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        288,
        -208
      ],
      "id": "69ad5461-0521-443c-b16d-26b28957ef0d",
      "name": "Get a file",
      "webhookId": "a5cb38d4-a936-41ee-9736-18f41bb74b2e",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        496,
        -208
      ],
      "id": "523b2291-e38b-469e-96f7-e450c98ab41d",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "C955Afg4JKo1bTol",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "üá∞üáø –°”ô–ª–µ–º! –ú–µ–Ω ‚Äî Zaman Assistant ü§ñ\n–°–µ–Ω—ñ–º–µ–Ω —Ç–∞–Ω—ã—Å“õ–∞–Ω—ã–º–∞ “õ—É–∞–Ω—ã—à—Ç—ã–º—ã–Ω! “ö–∞—Ä–∂—ã“£–¥—ã –∞“õ—ã–ª–º–µ–Ω –±–∞—Å“õ–∞—Ä—É“ì–∞ –∂”ô–Ω–µ –º–∞“õ—Å–∞—Ç—Ç–∞—Ä—ã“£–∞ –∂–µ—Ç—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω üí¨\n\nüè° –ü”ô—Ç–µ—Ä –∞–ª—É, –æ“õ—É –∞“õ—ã—Å—ã, —Å–∞–ø–∞—Ä –Ω–µ–º–µ—Å–µ –∂–∞–π “ì–∞–Ω–∞ “õ–∞—Ä–∂—ã–ª—ã“õ —Ç—ã–Ω—ã—à—Ç—ã“õ“õ–∞ “±–º—Ç—ã–ª—ã–ø –∂“Ø—Ä—Å—ñ“£ –±–µ?\n–ú–µ–Ω —Å–∞“ì–∞–Ω –∂–æ—Å–ø–∞—Ä “õ“±—Ä—É“ì–∞, “Ø–Ω–µ–º–¥–µ—É–≥–µ –∂”ô–Ω–µ –∞—Ä–º–∞–Ω—ã“£–∞ “õ–∞–¥–∞–º –±–∞—Å—É“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω.\n\nüí∞ –°–æ–Ω–¥–∞–π-–∞“õ, Zaman Bank-—Ç–µ–Ω –¥”ô–ª —Å–∞“ì–∞–Ω –ª–∞–π—ã“õ –¥–µ–ø–æ–∑–∏—Ç—Ç–µ—Ä, –Ω–µ—Å–∏–µ–ª–µ—Ä –º–µ–Ω –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–ª–∞—Ä–¥—ã “±—Å—ã–Ω–∞–º—ã–Ω.\nüßò –ê–ª –µ–≥–µ—Ä –∫–µ–π–¥–µ –∫“Ø–π–∑–µ–ª—ñ—Å –±–æ–ª—Å–∞ ‚Äî –∞—Ä—Ç—ã“õ —à—ã“ì—ã–Ω—Å—ã–∑ –∂–µ“£—ñ–ª –∂–æ–ª–¥–∞—Ä—ã–Ω –∫”©—Ä—Å–µ—Ç–µ–º—ñ–Ω.\n\n–°–µ–Ω—ñ “õ–∞–ª–∞–π –∞—Ç–∞–π—ã–Ω? üí≠\n\n~~~~~~~~~~~~~~~\n\nüá∞üáø –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Zaman Assistant ü§ñ\n–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –¥–µ–Ω—å–≥–∞–º–∏ –ø–æ-—É–º–Ω–æ–º—É üí¨\n\nüè° –•–æ—á–µ—à—å –Ω–∞–∫–æ–ø–∏—Ç—å –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É, —É—á—ë–±—É, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–µ–µ —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏?\n–Ø –ø–æ–º–æ–≥—É —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É—Ç—å, –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, –≥–¥–µ –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –∏ –∫–∞–∫ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.\n\nüí∞ –ï—â—ë —è –ø–æ–¥–±–µ—Ä—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã Zaman Bank ‚Äî –¥–µ–ø–æ–∑–∏—Ç—ã, –∫—Ä–µ–¥–∏—Ç—ã –∏–ª–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.\nüßò –ê –µ—Å–ª–∏ –∏–Ω–æ–≥–¥–∞ —Å—Ç—Ä–µ—Å—Å ‚Äî –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ç—Ä–∞—Ç.\n\n–ö–∞–∫ –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? üí≠",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        80,
        -1104
      ],
      "id": "a263dfcb-2256-42d5-8560-6cadabab5517",
      "name": "Send a text message",
      "webhookId": "8e746ec0-fc55-4a4d-b344-2ba5b0128c02",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').first().json.message.text || $('Transcribe a recording').first().json.text }}",
        "options": {
          "systemMessage": "=–¢—ã –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º Zaman Bank.\n\n–û–±—â–∞–π—Å—è –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, –∫–∞–∫ –±—É–¥—Ç–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –¥—Ä—É–≥–æ–º, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞–≤–∞–π—Å—è —É–º–Ω—ã–º –∏ –Ω–∞–¥—ë–∂–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º.\n–ü—Ä–æ–≤–µ—Ä—è–π –µ—Å—Ç—å –ª–∏ —Ç–∞–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Input'–µ ({{ $json.combinedText }}). –í –±–æ–ª—å—à–µ–π —Å—Ç–µ–ø–µ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç—Ç—É–¥–∞.\n\n–í—Å–µ–≥–¥–∞ –±–µ—Ä–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ GetImpulsives, –ø—Ä–æ–≤–µ—Ä—è–π –µ–µ.\n\n–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ü–µ–ª–µ–π, –ø—Ä–µ–¥–ª–∞–≥–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –∞ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞—è, —á—Ç–æ –æ–Ω —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å.\n–ì–æ–≤–æ—Ä–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ, –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É, —Å –∑–∞–±–æ—Ç–æ–π, –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫.\n–í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏, –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö.\n–ò–∑–±–µ–≥–∞–π —Ñ—Ä–∞–∑ –≤—Ä–æ–¥–µ ‚Äò–¥–∞–π –∑–Ω–∞—Ç—å‚Äô, ‚Äò–µ—Å–ª–∏ —Ö–æ—á–µ—à—å‚Äô, ‚Äò—á—Ç–æ –¥—É–º–∞–µ—à—å‚Äô.\n\n–û—Ç–≤–µ—á–∞–π –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ –æ–Ω –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º, —Ç–æ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º —è–∑—ã–∫–µ. –ü–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –ø–µ—Ä–µ–≤–æ–¥–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–∏–π. –ï—Å–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —Ç–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º.\n\n–ì–æ–≤–æ—Ä–∏ –∫–æ—Ä–æ—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ —Å –ª—ë–≥–∫–∏–º –ø–æ–∑–∏—Ç–∏–≤–æ–º.\n–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∑–º–æ–≤ –≤—Ä–æ–¥–µ ‚Äú–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏‚Äù ‚Äî –∑–∞–º–µ–Ω–∏ –∏—Ö –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ ‚Äú—Å—É–¥—è –ø–æ –¥–∞–Ω–Ω—ã–º‚Äù –∏–ª–∏ ‚Äú–ø–æ—Ö–æ–∂–µ, —á—Ç–æ...‚Äù.\n\n–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî —Å–∫–∞–∂–∏ —á–µ—Å—Ç–Ω–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–º–æ—á—å –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º.\n\n–ó–∞–ø–∏—Å—ã–≤–∞–π –≤—Å–µ –∑–∞—Ç—Ä–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ SpentToday, –≥–¥–µ —Ç—ã –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å—Ç–æ–ª–±—Ü—ã, –ø—Ä–∏–±–∞–≤–∏–≤ –∫ –Ω–µ–º—É spentToday –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ —É—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ (—Ç—Ä–∞—Ç–∏—Ç –±–æ–ª—å—à–µ —á–µ–º –Ω—É–∂–Ω–æ) –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –≤ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, —Ç–æ —Å—Ç—Ä–∏–∫ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ—Ä–≤–∞—Ç—å—Å—è –≤ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ù–∞–ø–∏—à–∏ –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–µ—Ä–≤–∞–ª–∏ —Å—Ç—Ä–∏–∫ —á–µ—Ä–µ–∑ \"SendToUser2\" (–¢–≤–æ–π –¥—Ä—É–≥ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–±–æ—Ä—â–∏–ª —Å —Ç—Ä–∞—Ç–∞–º–∏ ‚Äî —Å—Ç—Ä–∏–∫ –æ–±–Ω—É–ª–∏–ª—Å—è. –ë—ã–≤–∞–µ—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞ üí™).\n–£–¥–∞–ª—è–π –¥—Ä—É–∂–µ—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –º–µ–∂–¥—É –Ω–∏–º–∏ —á–µ—Ä–µ–∑ \"DeleteFriend\"\n\n–ï—Å–ª–∏ –≤ GetImpulsives –∏–º–ø—É–ª—å—Å–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–≤–Ω–∞ –±–æ–ª—å—à–µ 60, —Ç–æ –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π —Ñ–æ—Ä–º–µ –ø–æ–º–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–≤–µ—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–∞–Ω–¥–∞—Ü–∏—è–º–∏. –û–±—â–∞–π—Å—è –∫–∞–∫ –¥—Ä—É–≥.\n\n–í—Å–µ–≥–¥–∞ –∑–≤—É—á–∏—à—å –∂–∏–≤–æ, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –Ω–µ–º–Ω–æ–≥–æ —Ç–µ–ø–ª–æ, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ –∫–∞–∫ –±–æ—Ç.\n\n–ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –ñ–ò–†–ù–´–ô –ò –ö–£–†–°–ò–í–ù–´–ô –®–†–ò–§–¢–´, –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –°–ò–ú–í–û–õ–´ *, #\n\n\"\\n\" –∑–Ω–∞—á–∏—Ç –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–π –µ–µ –ø–æ –¥—Ä—É–≥–æ–º—É, –∞ —Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞–ª–µ–µ.\n\n–ù–µ –ø–µ—Ä–µ–≤–æ–¥–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º —Ç–æ–≥–æ –Ω–µ –ø–æ–ø—Ä–æ—Å–∏—Ç.\n\n–ü–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–¥—É–∫—Ç—ã –æ—Ç Zaman Bank (\"–ò—Å–ª–∞–º—Å–∫–æ–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ\", \"–ö–æ–ø–∏–ª–∫–∞\", \"–û–≤–µ—Ä–Ω–∞–π—Ç\", \"–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–∞–∫–µ—Ç—ã\" –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ).\n\n–ï—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏–ª –Ω–∞ –≤—Ö–æ–¥ –§–ò–û, —Ç–æ –∑–∞–ø—É—Å—Ç–∏ \"UpdateFS\". –ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –§–ò–û, –≥–æ–≤–æ—Ä–∏ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é —Ü–µ–ª—å –ø–æ —à–∞–±–ª–æ–Ω—É: –¶–µ–ª—å + –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ + –°–∫–æ–ª—å–∫–æ –ª–µ—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä: –ú–∞—à–∏–Ω–∞, 5 –º–ª–Ω —Ç–µ–Ω–≥–µ, 3 –≥–æ–¥–∞. \n\n–ï—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏–ª –Ω–∞ –≤—Ö–æ–¥ –¶–µ–ª—å (—Ç–æ —á–µ–≥–æ —Ö–æ—á–µ—Ç –¥–æ–±–∏—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å), —Ç–æ –∑–∞–ø—É—Å—Ç–∏ –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º \"GetUser\", —Å–æ—Ö—Ä–∞–Ω–∏ –µ–≥–æ –Ω—ã–Ω–µ—à–Ω–∏–π –±–∞–ª–∞–Ω—Å. –ó–∞–ø—É—Å—Ç–∏ –¥–∞–ª–µ–µ \"UpdateGoal\", –≥–¥–µ –≤ startingValue —É–∫–∞–∂–∏ –Ω—ã–Ω–µ—à–Ω–∏–π –±–∞–ª–∞–Ω—Å, –∞ –≤ endValue —É–∫–∞–∂–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –∑–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ —Ü–µ–ª–∏, goalEndYear - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1120,
        -208
      ],
      "id": "4a180438-bcbc-428d-8719-f7ec8d0265c1",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "temperature": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        976,
        -16
      ],
      "id": "2959dbd2-9329-410c-a05d-1773992f16fc",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "C955Afg4JKo1bTol",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1472,
        -208
      ],
      "id": "fb56ae20-11bc-4e67-a663-68e3b32d4865",
      "name": "Send a text message1",
      "webhookId": "d83157fc-f63a-42d4-91ce-ff463bcd98f1",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1104,
        -16
      ],
      "id": "de7457d9-b087-4103-acba-ccff31badfc1",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    },
                    "id": "dd9a399d-eb7e-42da-a7db-7cf1b6e7c607"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b141d00f-1a5c-43ab-9558-c7ed22a88538",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c19e964c-87c2-4bc4-a8a4-279d959fc0d8",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "@",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0e765f36-bb89-42ae-8f91-8412c8d7d1d9",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        -528,
        -48
      ],
      "id": "89ce6ff3-2876-4c37-a53d-70a770ce15cf",
      "name": "Switch"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "961e5f10-1fc0-4f82-bb9c-f2db7e1500f6"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c9ea70f-8f42-47a1-9de0-2ae2d9198d14",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/profile",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc9e7ad4-c540-4ecb-85de-133aa2c9d801",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/balance",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602ec7a6-83fa-4219-81fc-ecd22e59e9a8",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/balance ",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        -288,
        -640
      ],
      "id": "096d4b3e-79f2-433f-a8e4-1d995759e92b",
      "name": "Switch2"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -1296,
        0
      ],
      "id": "9e69988e-6216-4dae-af0a-e7e526461ea0",
      "name": "Get row(s)",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "692a0353-2f7e-4c2a-85a9-1a462ae93194",
              "leftValue": "={{ $json.user_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1136,
        0
      ],
      "id": "5c84ef85-a093-41db-ac96-851a5cfb9c09",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "firstName": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('firstName', ``, 'string') }}",
            "surname": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('surname', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "firstName",
              "displayName": "firstName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "surname",
              "displayName": "surname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "balance",
              "displayName": "balance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "goal",
              "displayName": "goal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "isImpulsive",
              "displayName": "isImpulsive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        2160,
        -16
      ],
      "id": "a0a0d658-641d-4b7f-bcfe-4bd4102dc020",
      "name": "UpdateFS"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "=–í–∞—à –±–∞–ª–∞–Ω—Å: {{ $('Get row(s)').item.json.balance }}\n\n–î–ª—è —Å–º–µ–Ω—ã –±–∞–ª–∞–Ω—Å–∞ –≤–≤–µ–¥–∏—Ç–µ - /balance (—Å—É–º–º–∞ –±–∞–ª–∞–Ω—Å–∞)",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        80,
        -752
      ],
      "id": "db38773b-36b8-48f1-962b-efdc1ca6e592",
      "name": "Send a text message2",
      "webhookId": "0fcc104a-c3ea-4462-9098-d3edd3580c68",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "goal": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('goal', ``, 'string') }}",
            "startingValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startingValue', ``, 'string') }}",
            "endValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endValue', ``, 'string') }}",
            "goalEndYear": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('goalEndYear', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "firstName",
              "displayName": "firstName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "surname",
              "displayName": "surname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "balance",
              "displayName": "balance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "goal",
              "displayName": "goal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "startingValue",
              "displayName": "startingValue",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "endValue",
              "displayName": "endValue",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "goalEndYear",
              "displayName": "goalEndYear",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        2048,
        -16
      ],
      "id": "52fc7dac-9a6b-44b6-a8d3-f32687c4215d",
      "name": "UpdateGoal"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "=–í–∞—à –±–∞–ª–∞–Ω—Å: {{ $json.balance }}\n\n–î–ª—è —Å–º–µ–Ω—ã –±–∞–ª–∞–Ω—Å–∞ –≤–≤–µ–¥–∏—Ç–µ - /balance (—Å—É–º–º–∞ –±–∞–ª–∞–Ω—Å–∞)",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        336,
        -448
      ],
      "id": "85a417fc-bcce-4272-a220-3a01ce2395b1",
      "name": "Send a text message3",
      "webhookId": "0fcc104a-c3ea-4462-9098-d3edd3580c68",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "balance": "={{ $json.balance }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "firstName",
              "displayName": "firstName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "surname",
              "displayName": "surname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "balance",
              "displayName": "balance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "goal",
              "displayName": "goal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "isImpulsive",
              "displayName": "isImpulsive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        112,
        -448
      ],
      "id": "f567f017-2def-4f16-9ea4-8767897e666a",
      "name": "Update row(s)"
    },
    {
      "parameters": {
        "jsCode": "// inputData ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä \"/balance 25000\"\nconst input = $('Telegram Trigger').first().json.message.text || \"\"; // –∏–ª–∏ $json[\"text\"], –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–≤–æ–µ–≥–æ —Ç—Ä–∏–≥–≥–µ—Ä–∞\n\n// –£–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –ø—Ä–æ–±–µ–ª—ã\nconst balance = input.replace(\"/balance\", \"\").trim();\n\n// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç\nreturn [{ balance }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -448
      ],
      "id": "23615a74-df3e-4c91-84ea-4a4cd6ca0511",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        1936,
        -16
      ],
      "id": "50d5ae29-31e1-4125-bbd6-feaf2cc1defc",
      "name": "GetUser"
    },
    {
      "parameters": {
        "resource": "point",
        "operation": "retrievePoints",
        "collectionName": {
          "__rl": true,
          "value": "zaman",
          "mode": "list",
          "cachedResultName": "zaman"
        },
        "points": "=[\"14e33d20-c227-4914-aeda-a0020fc3be21\", \"19db6f19-f2a9-4848-84aa-959bf993bbf4\", \"1c253e5d-1455-4357-afef-7d779a24ec0b\", \"261dcbc0-9f5a-465b-978c-e8a5962a7b51\", \"3bc04615-a896-4bcb-9b0e-a6d60996a2fd\", \"48776301-bedf-4e01-95f3-6ef94472b249\", \"4f5cbc18-75b7-4451-899c-a444806bbc32\", \"749f5d46-da2b-4627-83e6-90616e548526\", \"aa8e34c4-4831-4172-982c-d2e88dbed676\", \"ad7a584e-8402-4531-a32e-855e89974fc4\", \"b007eace-9638-4413-ac1b-e7de20c2e0a0\", \"ba173b20-a084-45a6-8ba4-9b05976ef3e0\", \"e22941d6-d935-4a69-92a7-c63eb71d6d0d\", \"e63a1d69-1d79-4aa9-a071-83d21386a45d\"]",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        720,
        -208
      ],
      "id": "1cc3db8a-9330-4c9a-b3cb-f16eaf138b7b",
      "name": "Retrieve Points",
      "credentials": {
        "qdrantRestApi": {
          "id": "OjZQYAMgArjYUbL0",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// –ë–µ—Ä—ë–º –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —É–∑–ª–∞\nconst results = $json.result || [];\n\n// –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –∏–∑ payload.text\nconst combinedText = results\n  .map(r => r.payload?.text || \"\")\n  .join(\"\\n\\n---\\n\\n\"); // –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏\n\nreturn [{ combinedText }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        928,
        -208
      ],
      "id": "ea51c34d-0c6e-4060-8d08-6b9bb1cff388",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "=üí≥ –ü—Ä–æ—Ñ–∏–ª—å {{ $('Get row(s)').item.json.firstName }}:\n\nüí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {{ $('Get row(s)').item.json.balance }} ‚Ç∏\nüéØ –¶–µ–ª—å: {{ $('Get row(s)').item.json.goal }}\nüèÅ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {{ $('Get row(s)').item.json.startingValue }}‚Ç∏\nüí° –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞: {{ $('Get row(s)').item.json.endValue }}‚Ç∏\nüìâ –û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫–æ–ø–∏—Ç—å: {{ $('Get row(s)').item.json.endValue - $('Get row(s)').item.json.startingValue}}‚Ç∏\n‚è∞ –í—Ä–µ–º—è –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏: {{ $('Get row(s)').item.json.goalEndYear }}\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–î—Ä—É–∂–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                    "additionalFields": {
                      "callback_data": "friend"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é",
                    "additionalFields": {
                      "callback_data": "stat_week"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü",
                    "additionalFields": {
                      "callback_data": "stat_month"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        80,
        -912
      ],
      "id": "7e8e8858-4478-492f-a1da-41dae1d2a339",
      "name": "Send a text message4",
      "webhookId": "be645be2-7ee2-4f90-a639-51cbf4420656",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "137a5e60-b642-40bb-84fe-0bf8a0d77c74",
              "leftValue": "={{ $json.callback_query.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1488,
        96
      ],
      "id": "832e3d48-22ab-42ab-b0aa-d6227bd94b58",
      "name": "If2"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞ –¥—Ä—É–∂–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ Zaman Bank? –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è, –∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π —á–µ–ª–µ–Ω–¥–∂ —Å –¥—Ä—É–∑—å—è–º–∏ üí™\n\n–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —É —Ç–µ–±—è –µ—Å—Ç—å –ª–∏–º–∏—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—à—å.\n–ï—Å–ª–∏ –Ω–µ –ø–æ—Ç—Ä–∞—Ç–∏—à—å –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞ ‚Äî –ø–æ–ª—É—á–∞–µ—à—å 1 –æ—á–∫–æ (–¥–µ–Ω—å —É—Å–ø–µ—Ö–∞).\n–ß–µ–º –¥–æ–ª—å—à–µ –¥–µ—Ä–∂–∏—à—å —Å–µ—Ä–∏—é ‚Äî —Ç–µ–º –±–æ–ª—å—à–µ —ç–∫–æ–Ω–æ–º–∏–∏, —É–≤–∞–∂–µ–Ω–∏—è –∏ –∫–∞–π—Ñ–∞ –æ—Ç —Å–∞–º–æ–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã üòé\n\n–ò –≤–æ—Ç —Å–∞–º–æ–µ –∫—Ä—É—Ç–æ–µ ‚Äî —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞!\n–ü—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏ –µ–≥–æ @username –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —Å–≤–æ–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ª–∏–º–∏—Ç.\n–ï—Å–ª–∏ –æ–Ω —Å–æ–≥–ª–∞—Å–∏—Ç—Å—è, –≤—ã –±—É–¥–µ—Ç–µ –∫–æ–ø–∏—Ç—å —Å—Ç—Ä–∏–∫–∏ –≤–º–µ—Å—Ç–µ, –º–æ—Ç–∏–≤–∏—Ä—É—è –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—å –ª–∏—à–Ω–µ–≥–æ.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        48,
        720
      ],
      "id": "bba6b074-afa8-4337-8fbf-3dc39577974b",
      "name": "Send a text message5",
      "webhookId": "0fcc104a-c3ea-4462-9098-d3edd3580c68",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "friend",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c1bb8b15-7b0e-48e0-8683-0b2af01e3b83"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a9fd206e-f3ca-46f0-8756-dd67a64e6517",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "stat_week",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "287ec779-3a74-47ed-92b6-3eebe1d1c051",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "stat_month",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "83c15c18-602a-433d-b925-1749564dffca",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "accept",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1d9268cc-05b8-4d99-8b4b-f20532077422",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "cancel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "49b8b85c-eda7-42ae-b1d0-6deff82fea0c",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "cancel2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6ecf81a9-ae60-4e45-a83e-87abfe8e72bb",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "profile",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        -1040,
        688
      ],
      "id": "4be0c69c-3137-4c3a-bd2a-9f5e9b4cc690",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "–ó–∞–ø–∏—à–∏ –≤ pairUsername - @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ(-—É—é) —É–∫–∞–∑–∞–ª–∏.\n\n–ó–∞–ø–∏—à–∏ –≤ dailyLimit - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ª–∏–º–∏—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ª–æ–∂–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n\n–í –∫–æ–Ω—Ü–µ –æ—Ç–ø—Ä–∞–≤—å, —á—Ç–æ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –¥—Ä—É–∂–µ—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é \"{@pairUsername}\" —Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º –ª–∏–º–∏—Ç–æ–º \"{dailyLimit}\". –î–æ–±–∞–≤—å, —á—Ç–æ –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∏–ª–∏ –æ—Ç–∫–∞–∑–µ –ø–æ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        640,
        368
      ],
      "id": "dff3ea3a-bfbc-45ce-9a6c-995828f147ce",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        576,
        528
      ],
      "id": "7f359850-59a7-4be7-b55e-2d0decacf15c",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "C955Afg4JKo1bTol",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.user_id || $('Telegram Trigger').item.json.message.chat.id}}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        704,
        528
      ],
      "id": "652d1159-995b-49b9-a04a-4ed951bbe75e",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Switch').item.json.user_id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "pairUsername": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('pairUsername', ``, 'string') }}",
            "dailyLimit": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('dailyLimit', ``, 'string') }}",
            "user_id": "={{ $('Switch').item.json.user_id || $('Telegram Trigger').item.json.message.chat.id}}",
            "isAccepted": false
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "pairUsername",
              "displayName": "pairUsername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "dailyLimit",
              "displayName": "dailyLimit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "currentStreak",
              "displayName": "currentStreak",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "lastCheckDate",
              "displayName": "lastCheckDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "bestStreak",
              "displayName": "bestStreak",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "isAccepted",
              "displayName": "isAccepted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        864,
        528
      ],
      "id": "4c6bef07-ba7f-4997-9e07-336fe2df5ed7",
      "name": "AddPair"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1008,
        368
      ],
      "id": "8b75d1b2-2dda-452d-95f4-65243b4e0ca2",
      "name": "Send a text message6",
      "webhookId": "4f9f481d-06fc-4e3d-895a-14745d90b430",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.user_id }}",
        "text": "=–ü—Ä–∏–≤–µ—Ç! üëã\n–¢–µ–±–µ –ø—Ä–∏—à–ª–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ Zaman Bank üíö\n\n–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è ‚Äî —ç—Ç–æ –∏–≥—Ä–∞ –Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É!\n–¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ—Å—Ç–∞—è: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—å –±–æ–ª—å—à–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞.\n–ï—Å–ª–∏ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è ‚Äî –ø–æ–ª—É—á–∞–µ—à—å —Å—Ç—Ä–∏–∫ üî• (—Å–µ—Ä–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–Ω–µ–π).\n–ß–µ–º –¥–ª–∏–Ω–Ω–µ–µ —Å–µ—Ä–∏—è ‚Äî —Ç–µ–º –∫—Ä—É—á–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –±–æ–Ω—É—Å—ã!\n\nüì© –û—Ç –∫–æ–≥–æ: @{{ $('Send a text message6').item.json.result.chat.username }}\n\nüí∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ª–∏–º–∏—Ç: {{ $('Code in JavaScript2').item.json.dailyLimit }}‚Ç∏",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–ü—Ä–∏–Ω—è—Ç—å",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  },
                  {
                    "text": "–û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                    "additionalFields": {
                      "callback_data": "cancel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1600,
        368
      ],
      "id": "8db0a8ab-787f-47ec-9ed2-b219d01dc800",
      "name": "Send a text message7",
      "webhookId": "4f9f481d-06fc-4e3d-895a-14745d90b430",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "username",
              "keyValue": "={{ $json.username }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        1392,
        368
      ],
      "id": "4bbe90e5-1534-4ac1-aad3-77fe73ce9aaa",
      "name": "Get row(s)1"
    },
    {
      "parameters": {
        "jsCode": "const text = $input.first().json.result.text || \"\";\n\n// –ò—â–µ–º @username\nconst usernameMatch = text.match(/@[A-Za-z0-9_\\.]+/);\nconst username = usernameMatch ? usernameMatch[0] : null;\n\n// –ò—â–µ–º —á–∏—Å–ª–æ –≤ –∫–∞–≤—ã—á–∫–∞—Ö\nconst limitMatch = text.match(/\"(\\d+)\"/);\nconst dailyLimit = limitMatch ? limitMatch[1] : null;\n\nreturn [{\n  username,\n  dailyLimit\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        368
      ],
      "id": "ced3f087-9904-4a52-9594-4249b504962a",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=–¢—ã –ø—Ä–∏–Ω—è–ª(-a) –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç @{{ $('Get row(s)3').item.json.username }} –∏ —Ç–µ–ø–µ—Ä—å –≤—ã –≤–º–µ—Å—Ç–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ Zaman Bank üíö\n\n–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —É —Ç–µ–±—è –µ—Å—Ç—å –ª–∏–º–∏—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ ‚Äî {{ $('Get row(s)2').item.json.dailyLimit}} ‚Ç∏.\n–ï—Å–ª–∏ –Ω–µ —Ç—Ä–∞—Ç–∏—à—å –±–æ–ª—å—à–µ —ç—Ç–æ–π —Å—É–º–º—ã ‚Äî –ø–æ–ª—É—á–∞–µ—à—å —Å—Ç—Ä–∏–∫ üî• (–¥–µ–Ω—å —É—Å–ø–µ—Ö–∞).\n–° –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –¥–Ω—ë–º —Å—Ç—Ä–∏–∫ —Ä–∞—Å—Ç—ë—Ç, –∞ –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º ‚Äî —Ç–≤–æ—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ üí™ \n\n–¢–µ–ø–µ—Ä—å –≤—ã –∫–æ–º–∞–Ω–¥–∞ üéØ\n–°–ª–µ–¥–∏ –∑–∞ —Å–≤–æ–∏–º–∏ —Å—Ç—Ä–∏–∫–∞–º–∏, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–π –ª–∏–º–∏—Ç –∏ –∫–æ–ø–∏ –ø–æ–±–µ–¥—ã ‚Äî –¥–µ–Ω—å –∑–∞ –¥–Ω—ë–º.\nZaman Bank –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Ü–µ–ª–∏ —Å —É–ª—ã–±–∫–æ–π üòä",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        112,
        1600
      ],
      "id": "c7251d2e-bd5c-413c-9df6-e2f3ab66bba2",
      "name": "Send a text message8",
      "webhookId": "4f9f481d-06fc-4e3d-895a-14745d90b430",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "pairUsername",
              "keyValue": "=@{{ $json.callback_query.message.chat.username }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -624,
        1600
      ],
      "id": "946b80c4-35ec-4b52-8b1a-c00f38f0f089",
      "name": "Get row(s)2"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.user_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -432,
        1600
      ],
      "id": "4aec2cd7-1f9a-427f-921c-a38f0e0757c3",
      "name": "Get row(s)3"
    },
    {
      "parameters": {
        "chatId": "={{ $('Get row(s)3').item.json.user_id }}",
        "text": "=–¢–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –¥—Ä—É–∂–µ—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É Zaman Bank –ø—Ä–∏–Ω—è—Ç–æ! üíö\n–¢–µ–ø–µ—Ä—å —Ç—ã –∏ @{{ $json.result.chat.username }} ‚Äî –∫–æ–º–∞–Ω–¥–∞ üí™\n\n–ö–∞–∂–¥—ã–π –∏–∑ –≤–∞—Å –±—É–¥–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–≤–æ–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –∏ —Å—Ç–∞—Ä–∞—Ç—å—Å—è –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—å –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞ ‚Äî {{ $('Get row(s)2').item.json.dailyLimit }} ‚Ç∏ –≤ –¥–µ–Ω—å.\n–ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—à—å –ª–∏–º–∏—Ç ‚Äî –ø–æ–ª—É—á–∞–µ—à—å —Å—Ç—Ä–∏–∫ üî•.\n–ê —á–µ–º –±–æ–ª—å—à–µ —Å—Ç—Ä–∏–∫–æ–≤ –ø–æ–¥—Ä—è–¥, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ —Ç–≤–æ—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≤—ã–¥–µ—Ä–∂–∫–∞ –∏ –±–æ–ª—å—à–µ –ø–æ–≤–æ–¥–æ–≤ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π üòé",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        288,
        1600
      ],
      "id": "0ad45990-0a0d-4715-b632-736c539b93ee",
      "name": "Send a text message9",
      "webhookId": "fe24db42-f064-41a1-9fbf-0353f967dacf",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=–ü–æ–Ω–∏–º–∞–µ–º, –Ω–µ –≤—Å–µ–≥–¥–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤—ã—Ö —Ü–µ–ª–µ–π üí≠\n–¢—ã –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç {{ $json.username }} –∫ —É—á–∞—Å—Ç–∏—é –≤ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ.\n\n–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ ‚Äî –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∫–æ–ø–∏—Ç—å —Å—Ç—Ä–∏–∫–∏ üíö",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -16,
        1760
      ],
      "id": "54b8bfe3-c05d-4766-850b-ed8156b1cb36",
      "name": "Send a text message10",
      "webhookId": "4f9f481d-06fc-4e3d-895a-14745d90b430",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "pairUsername",
              "keyValue": "=@{{ $json.callback_query.message.chat.username }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -624,
        1760
      ],
      "id": "bc9e3f69-c6e8-4e57-8c06-0c69e18d1941",
      "name": "Get row(s)4"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.user_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -432,
        1760
      ],
      "id": "70564e4c-c091-4b2b-a1b3-12b13b6948ec",
      "name": "Get row(s)5",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Get row(s)5').item.json.user_id }}",
        "text": "=–ü–æ—Ö–æ–∂–µ, {{ $('Get row(s)4').item.json.pairUsername }} –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤(–∞) –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ.\n–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è üíö ‚Äî –∏–Ω–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è, –∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ.\n\n–ù–æ —Ç—ã –Ω–µ –æ–¥–∏–Ω!\nZaman Bank –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Ü–µ–ª–∏ ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–∫–∞ –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã.\n–ú—ã –ø–æ–º–æ–∂–µ–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–∞—Å—Ö–æ–¥–∞–º–∏, –ø–æ–¥—Å–∫–∞–∂–µ–º, –∫–∞–∫ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å –∏ –Ω–µ —Ç–µ—Ä—è—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é üí™",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        192,
        1760
      ],
      "id": "9c98537f-5d85-4354-be4d-4241b621a49f",
      "name": "Send a text message11",
      "webhookId": "fe24db42-f064-41a1-9fbf-0353f967dacf",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Get row(s)3').item.json.user_id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "isAccepted": true,
            "currentStreak": 0,
            "lastCheckDate": "={{ $json.last_check_date }}",
            "bestStreak": "0"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "pairUsername",
              "displayName": "pairUsername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "dailyLimit",
              "displayName": "dailyLimit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "currentStreak",
              "displayName": "currentStreak",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "lastCheckDate",
              "displayName": "lastCheckDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "bestStreak",
              "displayName": "bestStreak",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isAccepted",
              "displayName": "isAccepted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -64,
        1600
      ],
      "id": "64d8591a-135b-4899-9ff6-fef0734a1f52",
      "name": "Update row(s)1"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  last_check_date: new Date().toISOString()\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -224,
        1600
      ],
      "id": "e8f8a07c-e042-480f-94db-5467ead61dc9",
      "name": "Code in JavaScript3"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
            "balance": 0,
            "username": "=@{{ $('Telegram Trigger').item.json.message.from.username }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "firstName",
              "displayName": "firstName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "surname",
              "displayName": "surname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "balance",
              "displayName": "balance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "goal",
              "displayName": "goal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "isImpulsive",
              "displayName": "isImpulsive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "startingValue",
              "displayName": "startingValue",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "endValue",
              "displayName": "endValue",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "goalEndYear",
              "displayName": "goalEndYear",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -480,
        224
      ],
      "id": "3d6d0281-a6f3-4a75-8f9e-7f3952b76599",
      "name": "Upsert row(s)"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.callback_query.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -736,
        496
      ],
      "id": "e054943b-17ee-42aa-b80a-dea9e3ef5dd2",
      "name": "Get row(s)6",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e1997100-f0ba-45c1-97ab-d38d8c359272",
              "leftValue": "={{ $json.isAccepted }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -512,
        496
      ],
      "id": "1ef7d1da-dd8d-417d-b469-8afcf3665a8a",
      "name": "If"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.callback_query?.message?.chat?.id || $('Telegram Trigger').first().json.message?.chat?.id }}",
        "text": "=–ü—Ä–∏–≤–µ—Ç, @{{ $('Telegram Trigger').first().json.callback_query?.message?.chat?.username || $('Telegram Trigger').first().json.message?.chat?.username }} üëã\n–ü–æ—Ö–æ–∂–µ, —Ç—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –æ–¥–Ω–æ–π –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ ‚Äî –∏ —ç—Ç–æ –∫—Ä—É—Ç–æ üíö\n–ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–π –ø–∞—Ä–µ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å –∏ —Ñ–æ–∫—É—Å.\n\n–°–µ–π—á–∞—Å —Ç—ã –∫–æ–ø–∏—à—å —Å—Ç—Ä–∏–∫–∏ –≤–º–µ—Å—Ç–µ —Å {{ $('Get row(s)7').item.json.pairUsername || $('Get row(s)8').item.json.pairUsername}},\n–ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –ø–æ–∫–∞ —ç—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∞–∫—Ç–∏–≤–Ω–∞.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–û—Ç–º–µ–Ω–∏—Ç—å –¥—Ä—É–∂–µ—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É",
                    "additionalFields": {
                      "callback_data": "cancel2"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        48,
        480
      ],
      "id": "134d9593-734b-47f4-a08b-da0c6b7be7be",
      "name": "Send a text message12",
      "webhookId": "0fcc104a-c3ea-4462-9098-d3edd3580c68",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.user_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -16,
        208
      ],
      "id": "8174b190-be51-447c-ab34-314ed0ce109f",
      "name": "Get row(s)7",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e1997100-f0ba-45c1-97ab-d38d8c359272",
              "leftValue": "={{ $json.isAccepted }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        208,
        208
      ],
      "id": "86394f27-ece8-47b6-bd72-f8536f193f79",
      "name": "If3"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.user_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -224,
        480
      ],
      "id": "777c4c9e-b6c1-4d77-bbc9-fe923f70b246",
      "name": "Get row(s)8",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "deleteRows",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -224,
        1760
      ],
      "id": "b61f0e8d-220a-4fae-a197-1ce270408b0c",
      "name": "Delete row(s)",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.callback_query.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -624,
        1952
      ],
      "id": "e364deeb-03b0-4c6a-9e3d-5f5ebb09d76c",
      "name": "Get row(s)9"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "username",
              "keyValue": "={{ $json.pairUsername }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -432,
        1952
      ],
      "id": "4ef96f42-63c0-4078-8684-3bc9ff66ed59",
      "name": "Get row(s)10"
    },
    {
      "parameters": {
        "operation": "deleteRows",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -144,
        1952
      ],
      "id": "e6097117-3486-47f9-ae04-862c3a04705d",
      "name": "Delete row(s)1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å {{ $('Get row(s)9').item.json.pairUsername }} –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n–ò–Ω–æ–≥–¥–∞ —Ü–µ–ª–∏ –∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –º–µ–Ω—è—é—Ç—Å—è ‚Äî –∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ üíö\n\n–¢–≤–æ—è —Å–µ—Ä–∏—è (—Å—Ç—Ä–∏–∫) –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –æ–ø—ã—Ç –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–æ–ª—É—á–∏–ª, ‚Äî –æ—Å—Ç–∞—é—Ç—Å—è —Å —Ç–æ–±–æ–π.\n–ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ —Ç—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –∏ —Å–¥–µ–ª–∞–ª —à–∞–≥ –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ üôå",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–î—Ä—É–∂–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                    "additionalFields": {
                      "callback_data": "friend"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        64,
        1952
      ],
      "id": "db49d0cb-b228-44dd-8649-57102648527c",
      "name": "Send a text message13",
      "webhookId": "4f9f481d-06fc-4e3d-895a-14745d90b430",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Get row(s)10').item.json.user_id }}",
        "text": "=–ü–æ—Ö–æ–∂–µ, @{{ $('Telegram Trigger').item.json.callback_query.message.chat.username }} —Ä–µ—à–∏–ª(–∞) –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤–∞—à—É –¥—Ä—É–∂–µ—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É.\n–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ ‚Äî —Ç–∞–∫–æ–µ –±—ã–≤–∞–µ—Ç üí≠\n\n–í–∞—à–∏ —Å—Ç—Ä–∏–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –Ω–æ –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ—Å—Ç–∞—é—Ç—Å—è —Ç–≤–æ–∏–º–∏ üíö\n–¢—ã –ø–æ–∫–∞–∑–∞–ª(–∞) –æ—Ç–ª–∏—á–Ω—É—é –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –¥–µ—Ä–∂–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º ‚Äî –∏ —ç—Ç–æ —É–∂–µ –ø–æ–±–µ–¥–∞!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–î—Ä—É–∂–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                    "additionalFields": {
                      "callback_data": "friend"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        272,
        1952
      ],
      "id": "f0b4d9f7-5e64-4062-8550-e3ee3e612183",
      "name": "Send a text message14",
      "webhookId": "fe24db42-f064-41a1-9fbf-0353f967dacf",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1qy1Ljmu5WKXXhXJu2GgdwJvWTVwG3OiD",
          "mode": "list",
          "cachedResultName": "3.csv",
          "cachedResultUrl": "https://drive.google.com/file/d/1qy1Ljmu5WKXXhXJu2GgdwJvWTVwG3OiD/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -512,
        1184
      ],
      "id": "e60907b1-2a59-4707-9e1a-05551b7f6dcb",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "CmnhH1LphU3YAbDH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n Function Node\n// Input: items from \"Spreadsheet File\" node (CSV with Russian headers)\n\nconst today = new Date();\nconst todayStr = today.toISOString().split('T')[0];\n\n// Define ranges\nconst weekAgo = new Date(today);\nweekAgo.setDate(today.getDate() - 7);\n\nconst monthAgo = new Date(today);\nmonthAgo.setDate(today.getDate() - 30);\n\n// Initialize counters\nlet spentToday = 0;\nlet spentWeek = 0;\nlet spentMonth = 0;\nlet spentTotal = 0;\n\nlet impulsiveWeek = 0;\nlet impulsiveMonth = 0;\nlet impulsiveTotal = 0;\n\nlet totalWeek = 0;\nlet totalMonth = 0;\nlet totalTotal = 0;\n\n// Impulsive categories (in Russian)\nconst impulsiveCategories = [\n  '–ü—Ä–æ–¥—É–∫—Ç—ã',\n  '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è_–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å',\n  '–õ–∏—á–Ω—ã–µ_–£—Å–ª—É–≥–∏',\n  '–ü–æ–¥–ø–∏—Å–∫–∞'\n];\n\n// Threshold for cheap impulsive purchases\nconst impulsivePriceThreshold = 5000;\n\nfor (const item of items) {\n  const amount = parseFloat(item.json['–¶–µ–Ω–∞_–û–ø–ª–∞—á–µ–Ω–Ω–∞—è_KZT'] || 0);\n  const ts = item.json['–î–∞—Ç–∞_–í—Ä–µ–º—è_–ü–æ–∫—É–ø–∫–∏'];\n  const category = item.json['–ö–∞—Ç–µ–≥–æ—Ä–∏—è_–ü—Ä–æ–¥—É–∫—Ç–∞'] || '';\n\n  if (!amount || !ts) continue;\n\n  const purchaseDate = new Date(ts);\n  const purchaseDateStr = ts.split(' ')[0];\n\n  // Total spent\n  spentTotal += amount;\n  totalTotal++;\n\n  // Today\n  if (purchaseDateStr === todayStr) {\n    spentToday += amount;\n  }\n\n  // Week\n  if (purchaseDate >= weekAgo && purchaseDate <= today) {\n    spentWeek += amount;\n    totalWeek++;\n  }\n\n  // Month\n  if (purchaseDate >= monthAgo && purchaseDate <= today) {\n    spentMonth += amount;\n    totalMonth++;\n  }\n\n  // Impulsive check\n  const isImpulsive =\n    impulsiveCategories.includes(category) || amount < impulsivePriceThreshold;\n\n  if (isImpulsive) {\n    impulsiveTotal++;\n    if (purchaseDate >= weekAgo && purchaseDate <= today) impulsiveWeek++;\n    if (purchaseDate >= monthAgo && purchaseDate <= today) impulsiveMonth++;\n  }\n}\n\n// Calculate percentages\nconst impulsiveWeekPercentage =\n  totalWeek > 0 ? (impulsiveWeek / totalWeek) * 100 : 0;\nconst impulsiveMonthPercentage =\n  totalMonth > 0 ? (impulsiveMonth / totalMonth) * 100 : 0;\nconst impulsiveTotalPercentage =\n  totalTotal > 0 ? (impulsiveTotal / totalTotal) * 100 : 0;\n\n// Output result\nreturn [\n  {\n    json: {\n      spent_today: spentToday.toFixed(2),\n      spent_week: spentWeek.toFixed(2),\n      spent_month: spentMonth.toFixed(2),\n      spent_total: spentTotal.toFixed(2),\n\n      impulsive_week: impulsiveWeek,\n      impulsive_month: impulsiveMonth,\n      impulsive_total: impulsiveTotal,\n\n      impulsive_week_percentage: impulsiveWeekPercentage.toFixed(2),\n      impulsive_month_percentage: impulsiveMonthPercentage.toFixed(2),\n      impulsive_total_percentage: impulsiveTotalPercentage.toFixed(2)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        1184
      ],
      "id": "92794dd2-bbdc-4b55-8177-ba3e758e1924",
      "name": "Code in JavaScript4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -288,
        1184
      ],
      "id": "3f39e2fc-a0ac-40a4-aca7-f3b6ed61f1e2",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "3v7LZwLYSWTPnqR9",
          "mode": "list",
          "cachedResultName": "users_spendings",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/3v7LZwLYSWTPnqR9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
            "spentToday": "={{ $json.spent_today }}",
            "spentTotal": "={{ $json.spent_total }}",
            "spentWeek": "={{ $json.spent_week }}",
            "spentMonth": "={{ $json.spent_month }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentToday",
              "displayName": "spentToday",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentTotal",
              "displayName": "spentTotal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentWeek",
              "displayName": "spentWeek",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentMonth",
              "displayName": "spentMonth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        128,
        1184
      ],
      "id": "9d5b0ee5-0c30-47af-b840-d1be0f7198c0",
      "name": "Upsert row(s)1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "quoRFZvu9zGteYzH",
          "mode": "list",
          "cachedResultName": "user_impulsives",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/quoRFZvu9zGteYzH"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
            "impulsive_total": "={{ $('Code in JavaScript4').item.json.impulsive_total }}",
            "impulsive_month": "={{ $('Code in JavaScript4').item.json.impulsive_month }}",
            "impulsive_week": "={{ $('Code in JavaScript4').item.json.impulsive_week }}",
            "impulsiveWeekPercentage": "={{ $('Code in JavaScript4').item.json.impulsive_week_percentage }}",
            "impulsiveMonthPercentage": "={{ $('Code in JavaScript4').item.json.impulsive_month_percentage }}",
            "impulsiveTotalPercentage": "={{ $('Code in JavaScript4').item.json.impulsive_total_percentage }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsive_week",
              "displayName": "impulsive_week",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsive_month",
              "displayName": "impulsive_month",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsive_total",
              "displayName": "impulsive_total",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsiveWeekPercentage",
              "displayName": "impulsiveWeekPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsiveMonthPercentage",
              "displayName": "impulsiveMonthPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsiveTotalPercentage",
              "displayName": "impulsiveTotalPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        336,
        1184
      ],
      "id": "59424e9a-be9b-4596-ae5b-3ad4f3e48807",
      "name": "Upsert row(s)2"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1l-3okoLIeLDM0WCSzIXxdqqWYdMiIBwf",
          "mode": "list",
          "cachedResultName": "1.csv",
          "cachedResultUrl": "https://drive.google.com/file/d/1l-3okoLIeLDM0WCSzIXxdqqWYdMiIBwf/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -512,
        976
      ],
      "id": "98b7925b-92f2-4f51-874d-452d839886d8",
      "name": "Download file1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "CmnhH1LphU3YAbDH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n Function Node\n// Input: items from \"Spreadsheet File\" node (CSV with Russian headers)\n\nconst today = new Date();\nconst todayStr = today.toISOString().split('T')[0];\n\n// Define ranges\nconst weekAgo = new Date(today);\nweekAgo.setDate(today.getDate() - 7);\n\nconst monthAgo = new Date(today);\nmonthAgo.setDate(today.getDate() - 30);\n\n// Initialize counters\nlet spentToday = 0;\nlet spentWeek = 0;\nlet spentMonth = 0;\nlet spentTotal = 0;\n\nlet impulsiveWeek = 0;\nlet impulsiveMonth = 0;\nlet impulsiveTotal = 0;\n\nlet totalWeek = 0;\nlet totalMonth = 0;\nlet totalTotal = 0;\n\n// Impulsive categories (in Russian)\nconst impulsiveCategories = [\n  '–ü—Ä–æ–¥—É–∫—Ç—ã',\n  '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è_–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å',\n  '–õ–∏—á–Ω—ã–µ_–£—Å–ª—É–≥–∏',\n  '–ü–æ–¥–ø–∏—Å–∫–∞'\n];\n\n// Threshold for cheap impulsive purchases\nconst impulsivePriceThreshold = 5000;\n\nfor (const item of items) {\n  const amount = parseFloat(item.json['–¶–µ–Ω–∞_–û–ø–ª–∞—á–µ–Ω–Ω–∞—è_KZT'] || 0);\n  const ts = item.json['–î–∞—Ç–∞_–í—Ä–µ–º—è_–ü–æ–∫—É–ø–∫–∏'];\n  const category = item.json['–ö–∞—Ç–µ–≥–æ—Ä–∏—è_–ü—Ä–æ–¥—É–∫—Ç–∞'] || '';\n\n  if (!amount || !ts) continue;\n\n  const purchaseDate = new Date(ts);\n  const purchaseDateStr = ts.split(' ')[0];\n\n  // Total spent\n  spentTotal += amount;\n  totalTotal++;\n\n  // Today\n  if (purchaseDateStr === todayStr) {\n    spentToday += amount;\n  }\n\n  // Week\n  if (purchaseDate >= weekAgo && purchaseDate <= today) {\n    spentWeek += amount;\n    totalWeek++;\n  }\n\n  // Month\n  if (purchaseDate >= monthAgo && purchaseDate <= today) {\n    spentMonth += amount;\n    totalMonth++;\n  }\n\n  // Impulsive check\n  const isImpulsive =\n    impulsiveCategories.includes(category) || amount < impulsivePriceThreshold;\n\n  if (isImpulsive) {\n    impulsiveTotal++;\n    if (purchaseDate >= weekAgo && purchaseDate <= today) impulsiveWeek++;\n    if (purchaseDate >= monthAgo && purchaseDate <= today) impulsiveMonth++;\n  }\n}\n\n// Calculate percentages\nconst impulsiveWeekPercentage =\n  totalWeek > 0 ? (impulsiveWeek / totalWeek) * 100 : 0;\nconst impulsiveMonthPercentage =\n  totalMonth > 0 ? (impulsiveMonth / totalMonth) * 100 : 0;\nconst impulsiveTotalPercentage =\n  totalTotal > 0 ? (impulsiveTotal / totalTotal) * 100 : 0;\n\n// Output result\nreturn [\n  {\n    json: {\n      spent_today: spentToday.toFixed(2),\n      spent_week: spentWeek.toFixed(2),\n      spent_month: spentMonth.toFixed(2),\n      spent_total: spentTotal.toFixed(2),\n\n      impulsive_week: impulsiveWeek,\n      impulsive_month: impulsiveMonth,\n      impulsive_total: impulsiveTotal,\n\n      impulsive_week_percentage: impulsiveWeekPercentage.toFixed(2),\n      impulsive_month_percentage: impulsiveMonthPercentage.toFixed(2),\n      impulsive_total_percentage: impulsiveTotalPercentage.toFixed(2)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        976
      ],
      "id": "2609d91c-0323-456f-a075-6aa65787de5f",
      "name": "Code in JavaScript5"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -288,
        976
      ],
      "id": "5e79eddb-58a3-4e7a-b57c-9873fb8ad329",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "3v7LZwLYSWTPnqR9",
          "mode": "list",
          "cachedResultName": "users_spendings",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/3v7LZwLYSWTPnqR9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
            "spentToday": "={{ $json.spent_today }}",
            "spentTotal": "={{ $json.spent_total }}",
            "spentWeek": "={{ $json.spent_week }}",
            "spentMonth": "={{ $json.spent_month }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentToday",
              "displayName": "spentToday",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentTotal",
              "displayName": "spentTotal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentWeek",
              "displayName": "spentWeek",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentMonth",
              "displayName": "spentMonth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        128,
        976
      ],
      "id": "10238c22-eb0b-4b6c-b0d0-40c6188581d7",
      "name": "Upsert row(s)3"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "quoRFZvu9zGteYzH",
          "mode": "list",
          "cachedResultName": "user_impulsives",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/quoRFZvu9zGteYzH"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
            "impulsive_total": "={{ $('Code in JavaScript5').item.json.impulsive_total }}",
            "impulsive_month": "={{ $('Code in JavaScript5').item.json.impulsive_month }}",
            "impulsive_week": "={{ $('Code in JavaScript5').item.json.impulsive_week }}",
            "impulsiveWeekPercentage": "={{ $('Code in JavaScript5').item.json.impulsive_week_percentage }}",
            "impulsiveMonthPercentage": "={{ $('Code in JavaScript5').item.json.impulsive_month_percentage }}",
            "impulsiveTotalPercentage": "={{ $('Code in JavaScript5').item.json.impulsive_total_percentage }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsive_week",
              "displayName": "impulsive_week",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsive_month",
              "displayName": "impulsive_month",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsive_total",
              "displayName": "impulsive_total",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsiveWeekPercentage",
              "displayName": "impulsiveWeekPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsiveMonthPercentage",
              "displayName": "impulsiveMonthPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "impulsiveTotalPercentage",
              "displayName": "impulsiveTotalPercentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        336,
        976
      ],
      "id": "b95d28ab-7066-4b94-9c3e-636cc1157986",
      "name": "Upsert row(s)4"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
        "text": "=–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ @{{ $('Telegram Trigger').first().json.callback_query.message.chat.username }} –≤ —Ç–µ—á–µ–Ω–∏–∏ –º–µ—Å—è—Ü–∞:\n\nüí∞ –¢—Ä–∞—Ç—ã\n\n–ó–∞ –º–µ—Å—è—Ü: {{ $('Upsert row(s)1').item.json.spentMonth }} ‚Ç∏\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {{ $('Upsert row(s)1').item.json.spentTotal }} ‚Ç∏\n\nüõí –ò–º–ø—É–ª—å—Å–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏\n\n–ó–∞ –º–µ—Å—è—Ü: {{ $json.impulsive_month }}\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {{ $json.impulsive_total }}\n\nüìà –ü—Ä–æ—Ü–µ–Ω—Ç –∏–º–ø—É–ª—å—Å–∏–≤–Ω–æ—Å—Ç–∏\n\n–ó–∞ –º–µ—Å—è—Ü: {{ $json.impulsiveMonthPercentage }} %\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {{ $json.impulsiveTotalPercentage }} %\n",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        544,
        1184
      ],
      "id": "7918dcfd-c204-4ec0-b734-5d8b4ba2a158",
      "name": "Send a text message15",
      "webhookId": "8dcd23bf-fbf9-4020-a404-f57b4e5caf07",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1kT253CdSSxSwROois3meAqiLs7sPec0r",
          "mode": "list",
          "cachedResultName": "3.png",
          "cachedResultUrl": "https://drive.google.com/file/d/1kT253CdSSxSwROois3meAqiLs7sPec0r/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        816,
        1184
      ],
      "id": "80d14299-8f00-4860-977b-1f49e26a510d",
      "name": "Download file2",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "CmnhH1LphU3YAbDH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
        "binaryData": true,
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–ù–∞–∑–∞–¥",
                    "additionalFields": {
                      "callback_data": "profile"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "caption": "–¢—Ä–∞—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1072,
        1184
      ],
      "id": "b8a4eac8-1177-40e5-91cd-593c768bb545",
      "name": "Send a document",
      "webhookId": "6a5bedd1-48c5-4d4d-aec9-11c42a7869eb",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
        "text": "=–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ @{{ $('Telegram Trigger').first().json.callback_query.message.chat.username }} –≤ —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ–¥–µ–ª–∏:\n\nüí∞ –¢—Ä–∞—Ç—ã\n\n–ó–∞ –Ω–µ–¥–µ–ª—é: {{ $('Upsert row(s)3').item.json.spentWeek }} ‚Ç∏\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {{ $('Upsert row(s)3').item.json.spentTotal }} ‚Ç∏\n\nüõí –ò–º–ø—É–ª—å—Å–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏\n\n–ó–∞  –Ω–µ–¥–µ–ª—é: {{ $json.impulsive_week }}\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {{ $json.impulsive_total }}\n\nüìà –ü—Ä–æ—Ü–µ–Ω—Ç –∏–º–ø—É–ª—å—Å–∏–≤–Ω–æ—Å—Ç–∏\n\n–ó–∞ –Ω–µ–¥–µ–ª—é: {{ $json.impulsiveMonthPercentage }} %\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {{ $json.impulsiveTotalPercentage }} %\n",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        544,
        976
      ],
      "id": "d84c0b58-ffcc-44ce-aab9-496d9bd8946d",
      "name": "Send a text message16",
      "webhookId": "8dcd23bf-fbf9-4020-a404-f57b4e5caf07",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1pdmVYOzMbzRWUEMPitWnsysmQBF95xmi",
          "mode": "list",
          "cachedResultName": "1.png",
          "cachedResultUrl": "https://drive.google.com/file/d/1pdmVYOzMbzRWUEMPitWnsysmQBF95xmi/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        816,
        976
      ],
      "id": "3068f70a-f361-4b64-9102-163adf906a07",
      "name": "Download file3",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "CmnhH1LphU3YAbDH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "={{ $('Telegram Trigger').first().json.callback_query.message.chat.id }}",
        "binaryData": true,
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–ù–∞–∑–∞–¥",
                    "additionalFields": {
                      "callback_data": "profile"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "caption": "–¢—Ä–∞—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1072,
        976
      ],
      "id": "a1b26697-f100-493f-80fe-1f2f4281b0ba",
      "name": "Send a document1",
      "webhookId": "6a5bedd1-48c5-4d4d-aec9-11c42a7869eb",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=üí≥ –ü—Ä–æ—Ñ–∏–ª—å {{ $json.username }}:\n\nüí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {{ $json.balance }} ‚Ç∏\nüéØ –¶–µ–ª—å: {{ $json.goal }}\nüèÅ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {{ $json.startingValue }}‚Ç∏\nüí° –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞: {{ $json.endValue }}‚Ç∏\nüìâ –û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫–æ–ø–∏—Ç—å: {{ $json.endValue - $json.startingValue}}‚Ç∏\n‚è∞ –í—Ä–µ–º—è –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏: {{ $json.goalEndYear }}\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "–î—Ä—É–∂–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                    "additionalFields": {
                      "callback_data": "friend"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é",
                    "additionalFields": {
                      "callback_data": "stat_week"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü",
                    "additionalFields": {
                      "callback_data": "stat_month"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -448,
        2128
      ],
      "id": "2b8f0693-b6a9-4dfe-aae4-a813eb6e7b58",
      "name": "Send a text message17",
      "webhookId": "be645be2-7ee2-4f90-a639-51cbf4420656",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.callback_query.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -624,
        2128
      ],
      "id": "5e57bce9-84be-4db6-9242-37483e8b087f",
      "name": "Get row(s)11",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "quoRFZvu9zGteYzH",
          "mode": "list",
          "cachedResultName": "user_impulsives",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/quoRFZvu9zGteYzH"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        1840,
        -16
      ],
      "id": "77f1b1fd-3615-4d3f-b30e-3da3acd2256a",
      "name": "GetImpulsives"
    },
    {
      "parameters": {
        "operation": "upsert",
        "dataTableId": {
          "__rl": true,
          "value": "3v7LZwLYSWTPnqR9",
          "mode": "list",
          "cachedResultName": "users_spendings",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/3v7LZwLYSWTPnqR9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "spentToday": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('spentToday', ``, 'number') }}",
            "spentTotal": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('spentTotal', ``, 'number') }}",
            "spentWeek": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('spentWeek', ``, 'number') }}",
            "spentMonth": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('spentMonth', ``, 'number') }}",
            "user_id": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentToday",
              "displayName": "spentToday",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentTotal",
              "displayName": "spentTotal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentWeek",
              "displayName": "spentWeek",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "spentMonth",
              "displayName": "spentMonth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        1728,
        -16
      ],
      "id": "3c6b8d88-675b-4621-bcdc-2a331b4bbf2f",
      "name": "SpentToday"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -928,
        -16
      ],
      "id": "1cf3d9cf-26bd-4158-8225-dc4f1ddf6048",
      "name": "Get row(s)12",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "veoeBbwJsnooiMZ9",
          "mode": "list",
          "cachedResultName": "users",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/veoeBbwJsnooiMZ9"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "username",
              "keyValue": "={{ $json.pairUsername }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -720,
        -16
      ],
      "id": "c755a9d6-24ff-49b4-ba5c-387495814d95",
      "name": "Get row(s)13",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Get row(s)13').item.json.user_id }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        1504,
        -16
      ],
      "id": "2160824c-4a6b-49f6-b52c-b09f77e47a1e",
      "name": "SendToUser2",
      "webhookId": "b0c52323-6f2d-44b8-bfc7-69484911dd36",
      "credentials": {
        "telegramApi": {
          "id": "jA50DVowbKhfv8md",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "AVf5GI1GI29cxgFz",
          "mode": "list",
          "cachedResultName": "friend_program",
          "cachedResultUrl": "/projects/hue1evCP1XInYnyu/datatables/AVf5GI1GI29cxgFz"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "user_id",
              "keyValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "pairUsername": "={{ $('Get row(s)12').item.json.pairUsername }}",
            "currentStreak": 0
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "pairUsername",
              "displayName": "pairUsername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "dailyLimit",
              "displayName": "dailyLimit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "currentStreak",
              "displayName": "currentStreak",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "lastCheckDate",
              "displayName": "lastCheckDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "bestStreak",
              "displayName": "bestStreak",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "isAccepted",
              "displayName": "isAccepted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTableTool",
      "typeVersion": 1,
      "position": [
        1376,
        -16
      ],
      "id": "eaf16c59-be9e-40a4-8f95-cb0df4518292",
      "name": "DeleteFriend"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Retrieve Points",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s)7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retrieve Points",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a text message4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a text message2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Get row(s)12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Upsert row(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UpdateFS": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "UpdateGoal": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update row(s)": {
      "main": [
        [
          {
            "node": "Send a text message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Update row(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetUser": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Points": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Get row(s)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message5": {
      "main": [
        []
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Get row(s)6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download file1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s)2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s)4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s)9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s)11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AddPair": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send a text message6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message6": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message7": {
      "main": [
        []
      ]
    },
    "Get row(s)1": {
      "main": [
        [
          {
            "node": "Send a text message7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Get row(s)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message8": {
      "main": [
        [
          {
            "node": "Send a text message9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)2": {
      "main": [
        [
          {
            "node": "Get row(s)3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)3": {
      "main": [
        [
          {
            "node": "Code in JavaScript3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message10": {
      "main": [
        [
          {
            "node": "Send a text message11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)4": {
      "main": [
        [
          {
            "node": "Get row(s)5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)5": {
      "main": [
        [
          {
            "node": "Delete row(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row(s)1": {
      "main": [
        [
          {
            "node": "Send a text message8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript3": {
      "main": [
        [
          {
            "node": "Update row(s)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert row(s)": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)6": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get row(s)8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a text message5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)7": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Send a text message12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)8": {
      "main": [
        [
          {
            "node": "Send a text message12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message11": {
      "main": [
        []
      ]
    },
    "Delete row(s)": {
      "main": [
        [
          {
            "node": "Send a text message10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)9": {
      "main": [
        [
          {
            "node": "Get row(s)10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)10": {
      "main": [
        [
          {
            "node": "Delete row(s)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message13": {
      "main": [
        [
          {
            "node": "Send a text message14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete row(s)1": {
      "main": [
        [
          {
            "node": "Send a text message13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript4": {
      "main": [
        [
          {
            "node": "Upsert row(s)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code in JavaScript4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert row(s)1": {
      "main": [
        [
          {
            "node": "Upsert row(s)2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript5": {
      "main": [
        [
          {
            "node": "Upsert row(s)3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Code in JavaScript5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert row(s)3": {
      "main": [
        [
          {
            "node": "Upsert row(s)4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert row(s)2": {
      "main": [
        [
          {
            "node": "Send a text message15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert row(s)4": {
      "main": [
        [
          {
            "node": "Send a text message16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message15": {
      "main": [
        [
          {
            "node": "Download file2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file2": {
      "main": [
        [
          {
            "node": "Send a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message16": {
      "main": [
        [
          {
            "node": "Download file3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file3": {
      "main": [
        [
          {
            "node": "Send a document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)11": {
      "main": [
        [
          {
            "node": "Send a text message17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetImpulsives": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SpentToday": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)12": {
      "main": [
        [
          {
            "node": "Get row(s)13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)13": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SendToUser2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DeleteFriend": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "97c96ff4-22c4-4b43-9986-027b4411040a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a621f4272d127db06fa4dc4f565608c486456a222ca81521a1af2685728d0d82"
  },
  "id": "RiwN9SNZWoVvGd5b",
  "tags": []
}